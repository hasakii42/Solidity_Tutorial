{
	"id": "aabac006b9f55d7f6cd1f630605e4951",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mycontract.sol": {
				"content": "//SPDX License-Identifer:MIT\r\npragma solidity^0.8.0;\r\n\r\ncontract MyContract{\r\n // Varia\r\n\r\n\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mycontract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mycontract.sol\":56:95  contract MyContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mycontract.sol\":56:95  contract MyContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e5df4bc378c4bc963dac06da7dafa4b582e217ffa8f1837c6e70e030d48a83bd64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e5df4bc378c4bc963dac06da7dafa4b582e217ffa8f1837c6e70e030d48a83bd64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xDF 0x4B 0xC3 PUSH25 0xC4BC963DAC06DA7DAFA4B582E217FFA8F1837C6E70E030D48A DUP4 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "56:39:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e5df4bc378c4bc963dac06da7dafa4b582e217ffa8f1837c6e70e030d48a83bd64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xDF 0x4B 0xC3 PUSH25 0xC4BC963DAC06DA7DAFA4B582E217FFA8F1837C6E70E030D48A DUP4 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "56:39:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 95,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 95,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5df4bc378c4bc963dac06da7dafa4b582e217ffa8f1837c6e70e030d48a83bd64736f6c63430008000033",
									".code": [
										{
											"begin": 56,
											"end": 95,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 95,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 95,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 95,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 95,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 95,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mycontract.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mycontract.sol\":{\"keccak256\":\"0x375db1fc129c1ad5817f1a0efd6d6917839e0a02b0b9e1f4925377f3fdb771df\",\"urls\":[\"bzz-raw://ee06b2b87969ebceeb0697dc2032d3bfd5a55b40a1e4551571a5ae19fcf5c235\",\"dweb:/ipfs/QmVKMQhewu1YRi4srPqUxTGw9Vt6m8qR3cWxwwjrpuFPiq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mycontract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mycontract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mycontract.sol": {
				"ast": {
					"absolutePath": "contracts/Mycontract.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "56:39:0"
						}
					],
					"src": "30:65:0"
				},
				"id": 0
			}
		}
	}
}