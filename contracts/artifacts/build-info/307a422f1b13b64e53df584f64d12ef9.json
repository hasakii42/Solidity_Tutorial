{
	"id": "307a422f1b13b64e53df584f64d12ef9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mapping.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity ^0.8.0;\r\n contract Mycontract{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mapping.sol": {
				"Mycontract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mapping.sol\":59:80  contract Mycontract{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mapping.sol\":59:80  contract Mycontract{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026e91e4b5de9b48ea12257a603ecce7dc4f4fe6f43642fb68f5bac0ea0c8a6f364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122026e91e4b5de9b48ea12257a603ecce7dc4f4fe6f43642fb68f5bac0ea0c8a6f364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xE9 0x1E 0x4B 0x5D 0xE9 0xB4 DUP15 LOG1 0x22 JUMPI 0xA6 SUB 0xEC 0xCE PUSH30 0xC4F4FE6F43642FB68F5BAC0EA0C8A6F364736F6C63430008000033000000 ",
							"sourceMap": "59:21:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122026e91e4b5de9b48ea12257a603ecce7dc4f4fe6f43642fb68f5bac0ea0c8a6f364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xE9 0x1E 0x4B 0x5D 0xE9 0xB4 DUP15 LOG1 0x22 JUMPI 0xA6 SUB 0xEC 0xCE PUSH30 0xC4F4FE6F43642FB68F5BAC0EA0C8A6F364736F6C63430008000033000000 ",
							"sourceMap": "59:21:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026e91e4b5de9b48ea12257a603ecce7dc4f4fe6f43642fb68f5bac0ea0c8a6f364736f6c63430008000033",
									".code": [
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 80,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mapping.sol\":\"Mycontract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mapping.sol\":{\"keccak256\":\"0xdfcaccf551f08fee725bee18d81bf191121616bef367930854dba7c61296de7a\",\"urls\":[\"bzz-raw://ac96f0bf729b687ec72640e3450c6403dc9828864661effbba6093f832982f34\",\"dweb:/ipfs/QmSr7j7h5UAhm226h5CAwcvr7hyZqb6GrC88oyWFgV96MG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mapping.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mapping.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/Mapping.sol",
					"exportedSymbols": {
						"Mycontract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Mycontract",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "59:21:0"
						}
					],
					"src": "33:47:0"
				},
				"id": 0
			}
		}
	}
}