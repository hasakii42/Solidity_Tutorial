{
	"id": "7379e9e91322e0d08b302afc73c13fbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mapping.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n contract MyContract{\r\n//Mapping >> Datatypes lets you store key value pair in blockchain\r\n\r\n// Syntex mapping(key => value) myMapping;\r\n\r\nmapping(uint => string) names;\r\n\r\n\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mapping.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mapping.sol\":63:239  contract MyContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mapping.sol\":63:239  contract MyContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122053c9a3fb4fc24c64b96ea8a9a3da3a99d7e8fde8cc988bd680f2a243f97ab86164736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122053c9a3fb4fc24c64b96ea8a9a3da3a99d7e8fde8cc988bd680f2a243f97ab86164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xC9 LOG3 0xFB 0x4F 0xC2 0x4C PUSH5 0xB96EA8A9A3 0xDA GASPRICE SWAP10 0xD7 0xE8 REVERT 0xE8 0xCC SWAP9 DUP12 0xD6 DUP1 CALLCODE LOG2 NUMBER 0xF9 PUSH27 0xB86164736F6C634300080000330000000000000000000000000000 ",
							"sourceMap": "63:176:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122053c9a3fb4fc24c64b96ea8a9a3da3a99d7e8fde8cc988bd680f2a243f97ab86164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xC9 LOG3 0xFB 0x4F 0xC2 0x4C PUSH5 0xB96EA8A9A3 0xDA GASPRICE SWAP10 0xD7 0xE8 REVERT 0xE8 0xCC SWAP9 DUP12 0xD6 DUP1 CALLCODE LOG2 NUMBER 0xF9 PUSH27 0xB86164736F6C634300080000330000000000000000000000000000 ",
							"sourceMap": "63:176:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 239,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053c9a3fb4fc24c64b96ea8a9a3da3a99d7e8fde8cc988bd680f2a243f97ab86164736f6c63430008000033",
									".code": [
										{
											"begin": 63,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 239,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mapping.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mapping.sol\":{\"keccak256\":\"0x4ba587f8979e01e86cd640010a4610202ffb5aef9542cf63dccc0eac71893a2c\",\"urls\":[\"bzz-raw://3cdd7a6fa362eccc408d6055b02cc439b292920f0c4df3e1db78576749df5cfd\",\"dweb:/ipfs/QmaKMdMrjWHDc8xBWwN3UruVrZqFb9UBBbAc43TqABgkEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Mapping.sol:MyContract",
								"label": "names",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mapping.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mapping.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/Mapping.sol",
					"exportedSymbols": {
						"MyContract": [
							6
						]
					},
					"id": 7,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "MyContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "names",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "201:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "209:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "201:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 3,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "217:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 7,
							"src": "63:176:0"
						}
					],
					"src": "35:204:0"
				},
				"id": 0
			}
		}
	}
}