{
	"id": "30634c667c12314eb7a077e42e7cf490",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mapping.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity ^0.8.0;\r\n contract MyContract{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mapping.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mapping.sol\":59:80  contract MyContract{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mapping.sol\":59:80  contract MyContract{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c640366752c1a4bcdd8099e251add985c2e0f981ef7c910eccadef421d590d8f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c640366752c1a4bcdd8099e251add985c2e0f981ef7c910eccadef421d590d8f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 BLOCKHASH CALLDATASIZE PUSH8 0x52C1A4BCDD8099E2 MLOAD 0xAD 0xD9 DUP6 0xC2 0xE0 0xF9 DUP2 0xEF PUSH29 0x910ECCADEF421D590D8F64736F6C634300080000330000000000000000 ",
							"sourceMap": "59:21:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c640366752c1a4bcdd8099e251add985c2e0f981ef7c910eccadef421d590d8f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 BLOCKHASH CALLDATASIZE PUSH8 0x52C1A4BCDD8099E2 MLOAD 0xAD 0xD9 DUP6 0xC2 0xE0 0xF9 DUP2 0xEF PUSH29 0x910ECCADEF421D590D8F64736F6C634300080000330000000000000000 ",
							"sourceMap": "59:21:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 80,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c640366752c1a4bcdd8099e251add985c2e0f981ef7c910eccadef421d590d8f64736f6c63430008000033",
									".code": [
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 80,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 80,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mapping.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mapping.sol\":{\"keccak256\":\"0x567ee5a7e76d72334791aa07ba7982183b1ad8abe0bd05aec142c0d6ab39d983\",\"urls\":[\"bzz-raw://298f70b200fd7eb2ed54e6aea15653b5a7a7b894fa04e7e46dda97d087f3c152\",\"dweb:/ipfs/QmVvxGRKmSnujupryaHwqZ3G5cHK35NdPhsgz4adG8RNXy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mapping.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mapping.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/Mapping.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "59:21:0"
						}
					],
					"src": "33:47:0"
				},
				"id": 0
			}
		}
	}
}