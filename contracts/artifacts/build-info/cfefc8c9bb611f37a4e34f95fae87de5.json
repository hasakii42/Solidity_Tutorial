{
	"id": "cfefc8c9bb611f37a4e34f95fae87de5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mapping.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n contract MyContract{\r\n//Mapping >> Datatypes lets you store key value pair in blockchain\r\n\r\n// syntext mapping(key => value) myMapping;\r\n\r\n\r\n\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mapping.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mapping.sol\":63:208  contract MyContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mapping.sol\":63:208  contract MyContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbb7c86e5c85c13e23e860d6f6e7d0d04600c716e50aeca639130dc8ed5400c764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bbb7c86e5c85c13e23e860d6f6e7d0d04600c716e50aeca639130dc8ed5400c764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB7 0xC8 PUSH15 0x5C85C13E23E860D6F6E7D0D04600C7 AND 0xE5 EXP 0xEC 0xA6 CODECOPY SGT 0xD 0xC8 0xED SLOAD STOP 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "63:145:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bbb7c86e5c85c13e23e860d6f6e7d0d04600c716e50aeca639130dc8ed5400c764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB7 0xC8 PUSH15 0x5C85C13E23E860D6F6E7D0D04600C7 AND 0xE5 EXP 0xEC 0xA6 CODECOPY SGT 0xD 0xC8 0xED SLOAD STOP 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "63:145:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 208,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbb7c86e5c85c13e23e860d6f6e7d0d04600c716e50aeca639130dc8ed5400c764736f6c63430008000033",
									".code": [
										{
											"begin": 63,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 208,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mapping.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mapping.sol\":{\"keccak256\":\"0x145f827eadb729bc8a2482c8d8d8908aedfa8883133b1c6d3dd1cda8577d3de1\",\"urls\":[\"bzz-raw://8f3582e607c4dcb98583d4eb940bd15645f38347fcf2b202abfe1a90a89e46a5\",\"dweb:/ipfs/Qmeg3oPoP1eGqdbMRG7FD16etbzVrsC2rmtLBr8yzCnYyi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mapping.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mapping.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/Mapping.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "63:145:0"
						}
					],
					"src": "35:173:0"
				},
				"id": 0
			}
		}
	}
}