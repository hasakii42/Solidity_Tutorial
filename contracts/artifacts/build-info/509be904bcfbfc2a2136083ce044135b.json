{
	"id": "509be904bcfbfc2a2136083ce044135b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Counter.sol": {
				"content": "pragma solidity ^ 0.8.0;\r\n\r\n contract Counter { \r\n   //Code goes here....\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Counter.sol": {
				"Counter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Counter.sol\":29:80  contract Counter { ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Counter.sol\":29:80  contract Counter { ... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122032295ba616c270ca9448b23820683e105cfb01a273853a831118ee575f5f70bd64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122032295ba616c270ca9448b23820683e105cfb01a273853a831118ee575f5f70bd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x29 JUMPDEST 0xA6 AND 0xC2 PUSH17 0xCA9448B23820683E105CFB01A273853A83 GT XOR 0xEE JUMPI 0x5F 0x5F PUSH17 0xBD64736F6C634300080F00330000000000 ",
							"sourceMap": "29:51:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122032295ba616c270ca9448b23820683e105cfb01a273853a831118ee575f5f70bd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x29 JUMPDEST 0xA6 AND 0xC2 PUSH17 0xCA9448B23820683E105CFB01A273853A83 GT XOR 0xEE JUMPI 0x5F 0x5F PUSH17 0xBD64736F6C634300080F00330000000000 ",
							"sourceMap": "29:51:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 80,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 80,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032295ba616c270ca9448b23820683e105cfb01a273853a831118ee575f5f70bd64736f6c634300080f0033",
									".code": [
										{
											"begin": 29,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 80,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 80,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 80,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 80,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Counter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counter.sol\":{\"keccak256\":\"0x3e466cc4f429c5285ece4e91d1d4257c4c31d9fd2614074c1d3438ef4092d396\",\"urls\":[\"bzz-raw://f077821fa014e7546bcfeafb2d87af82af02ac4b01f82efe8f9f76a4fbb812dc\",\"dweb:/ipfs/QmcmchCtEnWTTx8S1bDeMKu3WiHwNmJwa1ZPKSkXLKjRoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Counter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Counter.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Counter.sol": {
				"ast": {
					"absolutePath": "contracts/Counter.sol",
					"exportedSymbols": {
						"Counter": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Counter",
							"nameLocation": "38:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "29:51:0",
							"usedErrors": []
						}
					],
					"src": "0:80:0"
				},
				"id": 0
			}
		}
	}
}